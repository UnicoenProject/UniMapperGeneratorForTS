/**
 * generated by Xtext 2.13.0
 */
package net.unicoen.uniMapperGenerator;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Grammar</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getType <em>Type</em>}</li>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getName <em>Name</em>}</li>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getRoot <em>Root</em>}</li>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getPrequels <em>Prequels</em>}</li>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getRules <em>Rules</em>}</li>
 *   <li>{@link net.unicoen.uniMapperGenerator.Grammar#getModes <em>Modes</em>}</li>
 * </ul>
 *
 * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar()
 * @model
 * @generated
 */
public interface Grammar extends EObject
{
  /**
   * Returns the value of the '<em><b>Type</b></em>' attribute.
   * The literals are from the enumeration {@link net.unicoen.uniMapperGenerator.GrammarType}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' attribute.
   * @see net.unicoen.uniMapperGenerator.GrammarType
   * @see #setType(GrammarType)
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Type()
   * @model
   * @generated
   */
  GrammarType getType();

  /**
   * Sets the value of the '{@link net.unicoen.uniMapperGenerator.Grammar#getType <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' attribute.
   * @see net.unicoen.uniMapperGenerator.GrammarType
   * @see #getType()
   * @generated
   */
  void setType(GrammarType value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link net.unicoen.uniMapperGenerator.Grammar#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Root</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Root</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Root</em>' containment reference.
   * @see #setRoot(rootSelection)
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Root()
   * @model containment="true"
   * @generated
   */
  rootSelection getRoot();

  /**
   * Sets the value of the '{@link net.unicoen.uniMapperGenerator.Grammar#getRoot <em>Root</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Root</em>' containment reference.
   * @see #getRoot()
   * @generated
   */
  void setRoot(rootSelection value);

  /**
   * Returns the value of the '<em><b>Prequels</b></em>' containment reference list.
   * The list contents are of type {@link net.unicoen.uniMapperGenerator.PrequelConstruct}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Prequels</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Prequels</em>' containment reference list.
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Prequels()
   * @model containment="true"
   * @generated
   */
  EList<PrequelConstruct> getPrequels();

  /**
   * Returns the value of the '<em><b>Rules</b></em>' containment reference list.
   * The list contents are of type {@link net.unicoen.uniMapperGenerator.Rule}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Rules</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Rules</em>' containment reference list.
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Rules()
   * @model containment="true"
   * @generated
   */
  EList<Rule> getRules();

  /**
   * Returns the value of the '<em><b>Modes</b></em>' containment reference list.
   * The list contents are of type {@link net.unicoen.uniMapperGenerator.Mode}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Modes</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Modes</em>' containment reference list.
   * @see net.unicoen.uniMapperGenerator.UniMapperGeneratorPackage#getGrammar_Modes()
   * @model containment="true"
   * @generated
   */
  EList<Mode> getModes();

} // Grammar
