/*
 * generated by Xtext 2.13.0
 */
grammar InternalUniMapperGenerator;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package net.unicoen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.unicoen.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.unicoen.services.UniMapperGeneratorGrammarAccess;

}

@parser::members {

 	private UniMapperGeneratorGrammarAccess grammarAccess;

    public InternalUniMapperGeneratorParser(TokenStream input, UniMapperGeneratorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Grammar";
   	}

   	@Override
   	protected UniMapperGeneratorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGrammar
entryRuleGrammar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGrammarRule()); }
	iv_ruleGrammar=ruleGrammar
	{ $current=$iv_ruleGrammar.current; }
	EOF;

// Rule Grammar
ruleGrammar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getTypeGrammarTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleGrammarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"net.unicoen.UniMapperGenerator.GrammarType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='grammar'
		{
			newLeafNode(otherlv_1, grammarAccess.getGrammarAccess().getGrammarKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getNameIdParserRuleCall_2_0());
				}
				lv_name_2_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SEMICOLON_3=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_3, grammarAccess.getGrammarAccess().getSEMICOLONTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getRootRootSelectionParserRuleCall_4_0());
				}
				lv_root_4_0=rulerootSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					set(
						$current,
						"root",
						lv_root_4_0,
						"net.unicoen.UniMapperGenerator.rootSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getPrequelsPrequelConstructParserRuleCall_5_0());
				}
				lv_prequels_5_0=rulePrequelConstruct
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					add(
						$current,
						"prequels",
						lv_prequels_5_0,
						"net.unicoen.UniMapperGenerator.PrequelConstruct");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getRulesRuleParserRuleCall_6_0());
				}
				lv_rules_6_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					add(
						$current,
						"rules",
						lv_rules_6_0,
						"net.unicoen.UniMapperGenerator.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarAccess().getModesModeParserRuleCall_7_0());
				}
				lv_modes_7_0=ruleMode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarRule());
					}
					add(
						$current,
						"modes",
						lv_modes_7_0,
						"net.unicoen.UniMapperGenerator.Mode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulerootSelection
entryRulerootSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootSelectionRule()); }
	iv_rulerootSelection=rulerootSelection
	{ $current=$iv_rulerootSelection.current; }
	EOF;

// Rule rootSelection
rulerootSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='root'
		{
			newLeafNode(otherlv_0, grammarAccess.getRootSelectionAccess().getRootKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRootSelectionRule());
					}
				}
				otherlv_1=RULE_RULE_REF
				{
					newLeafNode(otherlv_1, grammarAccess.getRootSelectionAccess().getRootParserRuleCrossReference_1_0());
				}
			)
		)
		this_SEMICOLON_2=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_2, grammarAccess.getRootSelectionAccess().getSEMICOLONTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulePrequelConstruct
entryRulePrequelConstruct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrequelConstructRule()); }
	iv_rulePrequelConstruct=rulePrequelConstruct
	{ $current=$iv_rulePrequelConstruct.current; }
	EOF;

// Rule PrequelConstruct
rulePrequelConstruct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrequelConstructAccess().getOptionsParserRuleCall_0());
		}
		this_Options_0=ruleOptions
		{
			$current = $this_Options_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrequelConstructAccess().getImportsParserRuleCall_1());
		}
		this_Imports_1=ruleImports
		{
			$current = $this_Imports_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrequelConstructAccess().getTokensParserRuleCall_2());
		}
		this_Tokens_2=ruleTokens
		{
			$current = $this_Tokens_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrequelConstructAccess().getGrammarActionParserRuleCall_3());
		}
		this_GrammarAction_3=ruleGrammarAction
		{
			$current = $this_GrammarAction_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	iv_ruleOptions=ruleOptions
	{ $current=$iv_ruleOptions.current; }
	EOF;

// Rule Options
ruleOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOptionsAccess().getOptionsAction_0(),
					$current);
			}
		)
		(
			(
				lv_keyword_1_0=RULE_OPTIONS_SPEC
				{
					newLeafNode(lv_keyword_1_0, grammarAccess.getOptionsAccess().getKeywordOPTIONS_SPECTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOptionsRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_1_0,
						"net.unicoen.UniMapperGenerator.OPTIONS_SPEC");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getOptionsOptionParserRuleCall_2_0_0());
					}
					lv_options_2_0=ruleOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						add(
							$current,
							"options",
							lv_options_2_0,
							"net.unicoen.UniMapperGenerator.Option");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_SEMICOLON_3=RULE_SEMICOLON
			{
				newLeafNode(this_SEMICOLON_3, grammarAccess.getOptionsAccess().getSEMICOLONTerminalRuleCall_2_1());
			}
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getTokenVocabParserRuleCall_0());
		}
		this_TokenVocab_0=ruleTokenVocab
		{
			$current = $this_TokenVocab_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionAccess().getNameIdParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getOptionAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionAccess().getValueOptionValueParserRuleCall_1_2_0());
					}
					lv_value_3_0=ruleOptionValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"net.unicoen.UniMapperGenerator.OptionValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTokenVocab
entryRuleTokenVocab returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenVocabRule()); }
	iv_ruleTokenVocab=ruleTokenVocab
	{ $current=$iv_ruleTokenVocab.current; }
	EOF;

// Rule TokenVocab
ruleTokenVocab returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_TOKEN_VOCAB
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTokenVocabAccess().getNameTOKEN_VOCABTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenVocabRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.unicoen.UniMapperGenerator.TOKEN_VOCAB");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenVocabAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenVocabRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTokenVocabAccess().getImportURIGrammarCrossReference_2_0());
				}
				ruleId
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOptionValue
entryRuleOptionValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionValueRule()); }
	iv_ruleOptionValue=ruleOptionValue
	{ $current=$iv_ruleOptionValue.current; }
	EOF;

// Rule OptionValue
ruleOptionValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionValueAccess().getQualifiedOptionParserRuleCall_0());
		}
		this_QualifiedOption_0=ruleQualifiedOption
		{
			$current = $this_QualifiedOption_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionValueAccess().getStringOptionParserRuleCall_1());
		}
		this_StringOption_1=ruleStringOption
		{
			$current = $this_StringOption_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionValueAccess().getActionOptionParserRuleCall_2());
		}
		this_ActionOption_2=ruleActionOption
		{
			$current = $this_ActionOption_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionValueAccess().getIntOptionParserRuleCall_3());
		}
		this_IntOption_3=ruleIntOption
		{
			$current = $this_IntOption_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedOption
entryRuleQualifiedOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedOptionRule()); }
	iv_ruleQualifiedOption=ruleQualifiedOption
	{ $current=$iv_ruleQualifiedOption.current; }
	EOF;

// Rule QualifiedOption
ruleQualifiedOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQualifiedOptionAccess().getValueQualifiedIdParserRuleCall_0());
			}
			lv_value_0_0=ruleQualifiedId
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQualifiedOptionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"net.unicoen.UniMapperGenerator.QualifiedId");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringOption
entryRuleStringOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOptionRule()); }
	iv_ruleStringOption=ruleStringOption
	{ $current=$iv_ruleStringOption.current; }
	EOF;

// Rule StringOption
ruleStringOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_MYSTRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringOptionAccess().getValueMYSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringOptionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.unicoen.UniMapperGenerator.MYSTRING");
			}
		)
	)
;

// Entry rule entryRuleActionOption
entryRuleActionOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionOptionRule()); }
	iv_ruleActionOption=ruleActionOption
	{ $current=$iv_ruleActionOption.current; }
	EOF;

// Rule ActionOption
ruleActionOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_ACTION
			{
				newLeafNode(lv_value_0_0, grammarAccess.getActionOptionAccess().getValueACTIONTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getActionOptionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.unicoen.UniMapperGenerator.ACTION");
			}
		)
	)
;

// Entry rule entryRuleIntOption
entryRuleIntOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOptionRule()); }
	iv_ruleIntOption=ruleIntOption
	{ $current=$iv_ruleIntOption.current; }
	EOF;

// Rule IntOption
ruleIntOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntOptionAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntOptionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.unicoen.UniMapperGenerator.INT");
			}
		)
	)
;

// Entry rule entryRuleImports
entryRuleImports returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportsRule()); }
	iv_ruleImports=ruleImports
	{ $current=$iv_ruleImports.current; }
	EOF;

// Rule Imports
ruleImports returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0='import'
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getImportsAccess().getKeywordImportKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportsRule());
					}
					setWithLastConsumed($current, "keyword", lv_keyword_0_0, "import");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImportsAccess().getImportsImportParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportsRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"net.unicoen.UniMapperGenerator.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getImportsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImportsAccess().getImportsImportParserRuleCall_2_1_0());
					}
					lv_imports_3_0=ruleImport
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportsRule());
						}
						add(
							$current,
							"imports",
							lv_imports_3_0,
							"net.unicoen.UniMapperGenerator.Import");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		this_SEMICOLON_4=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_4, grammarAccess.getImportsAccess().getSEMICOLONTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportAccess().getAliasIdParserRuleCall_0_0_0());
					}
					lv_alias_0_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportRule());
						}
						set(
							$current,
							"alias",
							lv_alias_0_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getImportAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getImportAccess().getImportURIGrammarCrossReference_0_2_0());
					}
					ruleId
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportURIGrammarCrossReference_1_0());
				}
				ruleId
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTokens
entryRuleTokens returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokensRule()); }
	iv_ruleTokens=ruleTokens
	{ $current=$iv_ruleTokens.current; }
	EOF;

// Rule Tokens
ruleTokens returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTokensAccess().getV4TokensParserRuleCall_0());
		}
		this_V4Tokens_0=ruleV4Tokens
		{
			$current = $this_V4Tokens_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTokensAccess().getEmptyTokensParserRuleCall_1());
		}
		this_EmptyTokens_1=ruleEmptyTokens
		{
			$current = $this_EmptyTokens_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTokensAccess().getV3TokensParserRuleCall_2());
		}
		this_V3Tokens_2=ruleV3Tokens
		{
			$current = $this_V3Tokens_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleV4Tokens
entryRuleV4Tokens returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV4TokensRule()); }
	iv_ruleV4Tokens=ruleV4Tokens
	{ $current=$iv_ruleV4Tokens.current; }
	EOF;

// Rule V4Tokens
ruleV4Tokens returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_TOKENS_SPEC
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getV4TokensAccess().getKeywordTOKENS_SPECTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getV4TokensRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"net.unicoen.UniMapperGenerator.TOKENS_SPEC");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getV4TokensAccess().getTokensV4TokenParserRuleCall_1_0());
				}
				lv_tokens_1_0=ruleV4Token
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getV4TokensRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_1_0,
						"net.unicoen.UniMapperGenerator.V4Token");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getV4TokensAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getV4TokensAccess().getTokensV4TokenParserRuleCall_2_1_0());
					}
					lv_tokens_3_0=ruleV4Token
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getV4TokensRule());
						}
						add(
							$current,
							"tokens",
							lv_tokens_3_0,
							"net.unicoen.UniMapperGenerator.V4Token");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getV4TokensAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleV4Token
entryRuleV4Token returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV4TokenRule()); }
	iv_ruleV4Token=ruleV4Token
	{ $current=$iv_ruleV4Token.current; }
	EOF;

// Rule V4Token
ruleV4Token returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getV4TokenAccess().getNameIdParserRuleCall_0());
			}
			lv_name_0_0=ruleId
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getV4TokenRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"net.unicoen.UniMapperGenerator.Id");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyTokens
entryRuleEmptyTokens returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyTokensRule()); }
	iv_ruleEmptyTokens=ruleEmptyTokens
	{ $current=$iv_ruleEmptyTokens.current; }
	EOF;

// Rule EmptyTokens
ruleEmptyTokens returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmptyTokensAccess().getEmptyTokensAction_0(),
					$current);
			}
		)
		(
			(
				lv_keyword_1_0=RULE_TOKENS_SPEC
				{
					newLeafNode(lv_keyword_1_0, grammarAccess.getEmptyTokensAccess().getKeywordTOKENS_SPECTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmptyTokensRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_1_0,
						"net.unicoen.UniMapperGenerator.TOKENS_SPEC");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getEmptyTokensAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleV3Tokens
entryRuleV3Tokens returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV3TokensRule()); }
	iv_ruleV3Tokens=ruleV3Tokens
	{ $current=$iv_ruleV3Tokens.current; }
	EOF;

// Rule V3Tokens
ruleV3Tokens returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_TOKENS_SPEC
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getV3TokensAccess().getKeywordTOKENS_SPECTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getV3TokensRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"net.unicoen.UniMapperGenerator.TOKENS_SPEC");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getV3TokensAccess().getTokensV3TokenParserRuleCall_1_0());
				}
				lv_tokens_1_0=ruleV3Token
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getV3TokensRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_1_0,
						"net.unicoen.UniMapperGenerator.V3Token");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getV3TokensAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleV3Token
entryRuleV3Token returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV3TokenRule()); }
	iv_ruleV3Token=ruleV3Token
	{ $current=$iv_ruleV3Token.current; }
	EOF;

// Rule V3Token
ruleV3Token returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getV3TokenAccess().getNameIdParserRuleCall_0_0());
				}
				lv_name_0_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getV3TokenRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getV3TokenAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					lv_value_2_0=RULE_MYSTRING
					{
						newLeafNode(lv_value_2_0, grammarAccess.getV3TokenAccess().getValueMYSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getV3TokenRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"net.unicoen.UniMapperGenerator.MYSTRING");
					}
				)
			)
		)?
		this_SEMICOLON_3=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_3, grammarAccess.getV3TokenAccess().getSEMICOLONTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleGrammarAction
entryRuleGrammarAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGrammarActionRule()); }
	iv_ruleGrammarAction=ruleGrammarAction
	{ $current=$iv_ruleGrammarAction.current; }
	EOF;

// Rule GrammarAction
ruleGrammarAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getGrammarActionAccess().getCommercialAtKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGrammarActionAccess().getScopeActionScopeParserRuleCall_1_0_0());
					}
					lv_scope_1_0=ruleActionScope
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGrammarActionRule());
						}
						set(
							$current,
							"scope",
							lv_scope_1_0,
							"net.unicoen.UniMapperGenerator.ActionScope");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_colonSymbol_2_0='::'
					{
						newLeafNode(lv_colonSymbol_2_0, grammarAccess.getGrammarActionAccess().getColonSymbolColonColonKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGrammarActionRule());
						}
						setWithLastConsumed($current, "colonSymbol", lv_colonSymbol_2_0, "::");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGrammarActionAccess().getNameIdParserRuleCall_2_0());
				}
				lv_name_3_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGrammarActionRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_action_4_0=RULE_ACTION
				{
					newLeafNode(lv_action_4_0, grammarAccess.getGrammarActionAccess().getActionACTIONTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGrammarActionRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_4_0,
						"net.unicoen.UniMapperGenerator.ACTION");
				}
			)
		)
	)
;

// Entry rule entryRuleActionScope
entryRuleActionScope returns [String current=null]:
	{ newCompositeNode(grammarAccess.getActionScopeRule()); }
	iv_ruleActionScope=ruleActionScope
	{ $current=$iv_ruleActionScope.current.getText(); }
	EOF;

// Rule ActionScope
ruleActionScope returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='parser'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionScopeAccess().getParserKeyword_0());
		}
		    |
		kw='lexer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionScopeAccess().getLexerKeyword_1());
		}
		    |
		kw='tree'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionScopeAccess().getTreeKeyword_2());
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionScopeAccess().getIdParserRuleCall_3());
		}
		this_Id_3=ruleId
		{
			$current.merge(this_Id_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMode
entryRuleMode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModeRule()); }
	iv_ruleMode=ruleMode
	{ $current=$iv_ruleMode.current; }
	EOF;

// Rule Mode
ruleMode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mode'
		{
			newLeafNode(otherlv_0, grammarAccess.getModeAccess().getModeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModeAccess().getIdIdParserRuleCall_1_0());
				}
				lv_id_1_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModeRule());
					}
					set(
						$current,
						"id",
						lv_id_1_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SEMICOLON_2=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_2, grammarAccess.getModeAccess().getSEMICOLONTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModeAccess().getRulesLexerRuleParserRuleCall_3_0());
				}
				lv_rules_3_0=ruleLexerRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModeRule());
					}
					add(
						$current,
						"rules",
						lv_rules_3_0,
						"net.unicoen.UniMapperGenerator.LexerRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRuleAccess().getParserRuleParserRuleCall_0());
		}
		this_ParserRule_0=ruleParserRule
		{
			$current = $this_ParserRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRuleAccess().getLexerRuleParserRuleCall_1());
		}
		this_LexerRule_1=ruleLexerRule
		{
			$current = $this_LexerRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParserRule
entryRuleParserRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParserRuleRule()); }
	iv_ruleParserRule=ruleParserRule
	{ $current=$iv_ruleParserRule.current; }
	EOF;

// Rule ParserRule
ruleParserRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_RULE_REF
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParserRuleAccess().getNameRULE_REFTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParserRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.unicoen.UniMapperGenerator.RULE_REF");
				}
			)
		)
		(
			(
				lv_args_1_0=RULE_ARG_OR_CHARSET
				{
					newLeafNode(lv_args_1_0, grammarAccess.getParserRuleAccess().getArgsARG_OR_CHARSETTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParserRuleRule());
					}
					setWithLastConsumed(
						$current,
						"args",
						lv_args_1_0,
						"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getReturnReturnParserRuleCall_2_0());
				}
				lv_return_2_0=ruleReturn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"return",
						lv_return_2_0,
						"net.unicoen.UniMapperGenerator.Return");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getThrowsExceptionsParserRuleCall_3_0());
				}
				lv_throws_3_0=ruleExceptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"throws",
						lv_throws_3_0,
						"net.unicoen.UniMapperGenerator.Exceptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getLocalsLocalVarsParserRuleCall_4_0());
				}
				lv_locals_4_0=ruleLocalVars
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"locals",
						lv_locals_4_0,
						"net.unicoen.UniMapperGenerator.LocalVars");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getPrequelsRulePrequelParserRuleCall_5_0());
				}
				lv_prequels_5_0=ruleRulePrequel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					add(
						$current,
						"prequels",
						lv_prequels_5_0,
						"net.unicoen.UniMapperGenerator.RulePrequel");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getTypeUnicoenTypeDecParserRuleCall_6_0());
				}
				lv_type_6_0=ruleUnicoenTypeDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"type",
						lv_type_6_0,
						"net.unicoen.UniMapperGenerator.UnicoenTypeDec");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_COLON_7=RULE_COLON
		{
			newLeafNode(this_COLON_7, grammarAccess.getParserRuleAccess().getCOLONTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getBodyRuleAltListParserRuleCall_8_0());
				}
				lv_body_8_0=ruleRuleAltList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"net.unicoen.UniMapperGenerator.RuleAltList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParserRuleAccess().getCaughtExceptionGroupParserRuleCall_9_0());
				}
				lv_caught_9_0=ruleExceptionGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParserRuleRule());
					}
					set(
						$current,
						"caught",
						lv_caught_9_0,
						"net.unicoen.UniMapperGenerator.ExceptionGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_semicolonSymbol_10_0=RULE_SEMICOLON
				{
					newLeafNode(lv_semicolonSymbol_10_0, grammarAccess.getParserRuleAccess().getSemicolonSymbolSEMICOLONTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParserRuleRule());
					}
					setWithLastConsumed(
						$current,
						"semicolonSymbol",
						lv_semicolonSymbol_10_0,
						"net.unicoen.UniMapperGenerator.SEMICOLON");
				}
			)
		)
	)
;

// Entry rule entryRuleExceptionGroup
entryRuleExceptionGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionGroupRule()); }
	iv_ruleExceptionGroup=ruleExceptionGroup
	{ $current=$iv_ruleExceptionGroup.current; }
	EOF;

// Rule ExceptionGroup
ruleExceptionGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExceptionGroupAccess().getExceptionGroupAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionGroupAccess().getHandlersExceptionHandlerParserRuleCall_1_0());
				}
				lv_handlers_1_0=ruleExceptionHandler
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionGroupRule());
					}
					add(
						$current,
						"handlers",
						lv_handlers_1_0,
						"net.unicoen.UniMapperGenerator.ExceptionHandler");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionGroupAccess().getFinallyFinallyClauseParserRuleCall_2_0());
				}
				lv_finally_2_0=ruleFinallyClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionGroupRule());
					}
					set(
						$current,
						"finally",
						lv_finally_2_0,
						"net.unicoen.UniMapperGenerator.FinallyClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExceptionHandler
entryRuleExceptionHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionHandlerRule()); }
	iv_ruleExceptionHandler=ruleExceptionHandler
	{ $current=$iv_ruleExceptionHandler.current; }
	EOF;

// Rule ExceptionHandler
ruleExceptionHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='catch'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionHandlerAccess().getCatchKeyword_0());
		}
		(
			(
				lv_exception_1_0=RULE_ARG_OR_CHARSET
				{
					newLeafNode(lv_exception_1_0, grammarAccess.getExceptionHandlerAccess().getExceptionARG_OR_CHARSETTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionHandlerRule());
					}
					setWithLastConsumed(
						$current,
						"exception",
						lv_exception_1_0,
						"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
				}
			)
		)
		(
			(
				lv_body_2_0=RULE_ACTION
				{
					newLeafNode(lv_body_2_0, grammarAccess.getExceptionHandlerAccess().getBodyACTIONTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionHandlerRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_2_0,
						"net.unicoen.UniMapperGenerator.ACTION");
				}
			)
		)
	)
;

// Entry rule entryRuleFinallyClause
entryRuleFinallyClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinallyClauseRule()); }
	iv_ruleFinallyClause=ruleFinallyClause
	{ $current=$iv_ruleFinallyClause.current; }
	EOF;

// Rule FinallyClause
ruleFinallyClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='finally'
		{
			newLeafNode(otherlv_0, grammarAccess.getFinallyClauseAccess().getFinallyKeyword_0());
		}
		(
			(
				lv_body_1_0=RULE_ACTION
				{
					newLeafNode(lv_body_1_0, grammarAccess.getFinallyClauseAccess().getBodyACTIONTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFinallyClauseRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_1_0,
						"net.unicoen.UniMapperGenerator.ACTION");
				}
			)
		)
	)
;

// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	iv_ruleReturn=ruleReturn
	{ $current=$iv_ruleReturn.current; }
	EOF;

// Rule Return
ruleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='returns'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnAccess().getReturnsKeyword_0());
		}
		(
			(
				lv_body_1_0=RULE_ARG_OR_CHARSET
				{
					newLeafNode(lv_body_1_0, grammarAccess.getReturnAccess().getBodyARG_OR_CHARSETTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_1_0,
						"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
				}
			)
		)
	)
;

// Entry rule entryRuleExceptions
entryRuleExceptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionsRule()); }
	iv_ruleExceptions=ruleExceptions
	{ $current=$iv_ruleExceptions.current; }
	EOF;

// Rule Exceptions
ruleExceptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='throws'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionsAccess().getThrowsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionsAccess().getExceptionsQualifiedIdParserRuleCall_1_0());
				}
				lv_exceptions_1_0=ruleQualifiedId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionsRule());
					}
					add(
						$current,
						"exceptions",
						lv_exceptions_1_0,
						"net.unicoen.UniMapperGenerator.QualifiedId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExceptionsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionsAccess().getExceptionsQualifiedIdParserRuleCall_2_1_0());
					}
					lv_exceptions_3_0=ruleQualifiedId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionsRule());
						}
						add(
							$current,
							"exceptions",
							lv_exceptions_3_0,
							"net.unicoen.UniMapperGenerator.QualifiedId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLocalVars
entryRuleLocalVars returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVarsRule()); }
	iv_ruleLocalVars=ruleLocalVars
	{ $current=$iv_ruleLocalVars.current; }
	EOF;

// Rule LocalVars
ruleLocalVars returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='locals'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalVarsAccess().getLocalsKeyword_0());
		}
		(
			(
				lv_body_1_0=RULE_ARG_OR_CHARSET
				{
					newLeafNode(lv_body_1_0, grammarAccess.getLocalVarsAccess().getBodyARG_OR_CHARSETTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalVarsRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_1_0,
						"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
				}
			)
		)
	)
;

// Entry rule entryRuleRulePrequel
entryRuleRulePrequel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulePrequelRule()); }
	iv_ruleRulePrequel=ruleRulePrequel
	{ $current=$iv_ruleRulePrequel.current; }
	EOF;

// Rule RulePrequel
ruleRulePrequel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRulePrequelAccess().getOptionsParserRuleCall_0());
		}
		this_Options_0=ruleOptions
		{
			$current = $this_Options_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRulePrequelAccess().getRuleActionParserRuleCall_1());
		}
		this_RuleAction_1=ruleRuleAction
		{
			$current = $this_RuleAction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRuleAction
entryRuleRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleActionRule()); }
	iv_ruleRuleAction=ruleRuleAction
	{ $current=$iv_ruleRuleAction.current; }
	EOF;

// Rule RuleAction
ruleRuleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleActionAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleActionAccess().getNameIdParserRuleCall_1_0());
				}
				lv_name_1_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleActionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_body_2_0=RULE_ACTION
				{
					newLeafNode(lv_body_2_0, grammarAccess.getRuleActionAccess().getBodyACTIONTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleActionRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_2_0,
						"net.unicoen.UniMapperGenerator.ACTION");
				}
			)
		)
	)
;

// Entry rule entryRuleRuleAltList
entryRuleRuleAltList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleAltListRule()); }
	iv_ruleRuleAltList=ruleRuleAltList
	{ $current=$iv_ruleRuleAltList.current; }
	EOF;

// Rule RuleAltList
ruleRuleAltList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAltListAccess().getAlternativesLabeledAltParserRuleCall_0_0());
				}
				lv_alternatives_0_0=ruleLabeledAlt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleAltListRule());
					}
					add(
						$current,
						"alternatives",
						lv_alternatives_0_0,
						"net.unicoen.UniMapperGenerator.LabeledAlt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getRuleAltListAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAltListAccess().getAlternativesLabeledAltParserRuleCall_1_1_0());
					}
					lv_alternatives_2_0=ruleLabeledAlt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleAltListRule());
						}
						add(
							$current,
							"alternatives",
							lv_alternatives_2_0,
							"net.unicoen.UniMapperGenerator.LabeledAlt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLabeledAlt
entryRuleLabeledAlt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledAltRule()); }
	iv_ruleLabeledAlt=ruleLabeledAlt
	{ $current=$iv_ruleLabeledAlt.current; }
	EOF;

// Rule LabeledAlt
ruleLabeledAlt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledAltAccess().getBodyAlternativeParserRuleCall_0_0());
				}
				lv_body_0_0=ruleAlternative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledAltRule());
					}
					set(
						$current,
						"body",
						lv_body_0_0,
						"net.unicoen.UniMapperGenerator.Alternative");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='#'
			{
				newLeafNode(otherlv_1, grammarAccess.getLabeledAltAccess().getNumberSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLabeledAltAccess().getLabelIdParserRuleCall_1_1_0());
					}
					lv_label_2_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabeledAltRule());
						}
						set(
							$current,
							"label",
							lv_label_2_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAlternative
entryRuleAlternative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlternativeRule()); }
	iv_ruleAlternative=ruleAlternative
	{ $current=$iv_ruleAlternative.current; }
	EOF;

// Rule Alternative
ruleAlternative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAlternativeAccess().getAlternativeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAlternativeAccess().getOptionsElementOptionsParserRuleCall_1_0());
				}
				lv_options_1_0=ruleElementOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlternativeRule());
					}
					set(
						$current,
						"options",
						lv_options_1_0,
						"net.unicoen.UniMapperGenerator.ElementOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlternativeAccess().getElementsElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlternativeRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"net.unicoen.UniMapperGenerator.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getBodyLabeledElementParserRuleCall_0_0_0());
					}
					lv_body_0_0=ruleLabeledElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						set(
							$current,
							"body",
							lv_body_0_0,
							"net.unicoen.UniMapperGenerator.LabeledElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getOperatorEbnfSuffixParserRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleEbnfSuffix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"net.unicoen.UniMapperGenerator.EbnfSuffix");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getBodyAtomParserRuleCall_1_0_0());
					}
					lv_body_2_0=ruleAtom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"net.unicoen.UniMapperGenerator.Atom");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getOperatorEbnfSuffixParserRuleCall_1_1_0());
					}
					lv_operator_3_0=ruleEbnfSuffix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						set(
							$current,
							"operator",
							lv_operator_3_0,
							"net.unicoen.UniMapperGenerator.EbnfSuffix");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				this_DOLLAR_4=RULE_DOLLAR
				{
					newLeafNode(this_DOLLAR_4, grammarAccess.getElementAccess().getDOLLARTerminalRuleCall_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getOpIdParserRuleCall_1_2_1_0());
						}
						lv_op_5_0=ruleId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							set(
								$current,
								"op",
								lv_op_5_0,
								"net.unicoen.UniMapperGenerator.Id");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getBodyEbnfParserRuleCall_2_0());
				}
				lv_body_6_0=ruleEbnf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"net.unicoen.UniMapperGenerator.Ebnf");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getBodyActionElementParserRuleCall_3_0());
				}
				lv_body_7_0=ruleActionElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"net.unicoen.UniMapperGenerator.ActionElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEbnf
entryRuleEbnf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEbnfRule()); }
	iv_ruleEbnf=ruleEbnf
	{ $current=$iv_ruleEbnf.current; }
	EOF;

// Rule Ebnf
ruleEbnf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEbnfAccess().getBodyBlockParserRuleCall_0_0());
				}
				lv_body_0_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEbnfRule());
					}
					set(
						$current,
						"body",
						lv_body_0_0,
						"net.unicoen.UniMapperGenerator.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEbnfAccess().getOperatorEbnfSuffixParserRuleCall_1_0());
				}
				lv_operator_1_0=ruleEbnfSuffix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEbnfRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"net.unicoen.UniMapperGenerator.EbnfSuffix");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleActionElement
entryRuleActionElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionElementRule()); }
	iv_ruleActionElement=ruleActionElement
	{ $current=$iv_ruleActionElement.current; }
	EOF;

// Rule ActionElement
ruleActionElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_body_0_0=RULE_ACTION
				{
					newLeafNode(lv_body_0_0, grammarAccess.getActionElementAccess().getBodyACTIONTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionElementRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_0_0,
						"net.unicoen.UniMapperGenerator.ACTION");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActionElementAccess().getOptionsElementOptionsParserRuleCall_1_0());
				}
				lv_options_1_0=ruleElementOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionElementRule());
					}
					set(
						$current,
						"options",
						lv_options_1_0,
						"net.unicoen.UniMapperGenerator.ElementOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLabeledElement
entryRuleLabeledElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledElementRule()); }
	iv_ruleLabeledElement=ruleLabeledElement
	{ $current=$iv_ruleLabeledElement.current; }
	EOF;

// Rule LabeledElement
ruleLabeledElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledElementAccess().getNameIdParserRuleCall_0_0());
				}
				lv_name_0_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledElementRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_1='='
					{
						newLeafNode(lv_op_1_1, grammarAccess.getLabeledElementAccess().getOpEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLabeledElementRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='+='
					{
						newLeafNode(lv_op_1_2, grammarAccess.getLabeledElementAccess().getOpPlusSignEqualsSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLabeledElementRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLabeledElementAccess().getBodyAtomParserRuleCall_2_0_0());
					}
					lv_body_2_0=ruleAtom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabeledElementRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"net.unicoen.UniMapperGenerator.Atom");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLabeledElementAccess().getBodyBlockParserRuleCall_2_1_0());
					}
					lv_body_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabeledElementRule());
						}
						set(
							$current,
							"body",
							lv_body_3_0,
							"net.unicoen.UniMapperGenerator.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleEbnfSuffix
entryRuleEbnfSuffix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEbnfSuffixRule()); }
	iv_ruleEbnfSuffix=ruleEbnfSuffix
	{ $current=$iv_ruleEbnfSuffix.current; }
	EOF;

// Rule EbnfSuffix
ruleEbnfSuffix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_operator_0_0='?'
					{
						newLeafNode(lv_operator_0_0, grammarAccess.getEbnfSuffixAccess().getOperatorQuestionMarkKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_0_0, "?");
					}
				)
			)
			(
				(
					lv_nongreedy_1_0='?'
					{
						newLeafNode(lv_nongreedy_1_0, grammarAccess.getEbnfSuffixAccess().getNongreedyQuestionMarkKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "nongreedy", lv_nongreedy_1_0, "?");
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_operator_2_0='*'
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getEbnfSuffixAccess().getOperatorAsteriskKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "*");
					}
				)
			)
			(
				(
					lv_nongreedy_3_0='?'
					{
						newLeafNode(lv_nongreedy_3_0, grammarAccess.getEbnfSuffixAccess().getNongreedyQuestionMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "nongreedy", lv_nongreedy_3_0, "?");
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_operator_4_0='+'
					{
						newLeafNode(lv_operator_4_0, grammarAccess.getEbnfSuffixAccess().getOperatorPlusSignKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_4_0, "+");
					}
				)
			)
			(
				(
					lv_nongreedy_5_0='?'
					{
						newLeafNode(lv_nongreedy_5_0, grammarAccess.getEbnfSuffixAccess().getNongreedyQuestionMarkKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEbnfSuffixRule());
						}
						setWithLastConsumed($current, "nongreedy", lv_nongreedy_5_0, "?");
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getOptionsOptionsParserRuleCall_1_0_0());
					}
					lv_options_1_0=ruleOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						set(
							$current,
							"options",
							lv_options_1_0,
							"net.unicoen.UniMapperGenerator.Options");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getActionsRuleActionParserRuleCall_1_1_0());
					}
					lv_actions_2_0=ruleRuleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"actions",
							lv_actions_2_0,
							"net.unicoen.UniMapperGenerator.RuleAction");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					lv_colon_3_0=RULE_COLON
					{
						newLeafNode(lv_colon_3_0, grammarAccess.getBlockAccess().getColonCOLONTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlockRule());
						}
						setWithLastConsumed(
							$current,
							"colon",
							lv_colon_3_0,
							"net.unicoen.UniMapperGenerator.COLON");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getBodyAltListParserRuleCall_2_0());
				}
				lv_body_4_0=ruleAltList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"net.unicoen.UniMapperGenerator.AltList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBlockAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleAltList
entryRuleAltList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAltListRule()); }
	iv_ruleAltList=ruleAltList
	{ $current=$iv_ruleAltList.current; }
	EOF;

// Rule AltList
ruleAltList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAltListAccess().getAlternativesAlternativeParserRuleCall_0_0());
				}
				lv_alternatives_0_0=ruleAlternative
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAltListRule());
					}
					add(
						$current,
						"alternatives",
						lv_alternatives_0_0,
						"net.unicoen.UniMapperGenerator.Alternative");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getAltListAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAltListAccess().getAlternativesAlternativeParserRuleCall_1_1_0());
					}
					lv_alternatives_2_0=ruleAlternative
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAltListRule());
						}
						add(
							$current,
							"alternatives",
							lv_alternatives_2_0,
							"net.unicoen.UniMapperGenerator.Alternative");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomAccess().getBodyRangeParserRuleCall_0_0());
				}
				lv_body_0_1=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_1,
						"net.unicoen.UniMapperGenerator.Range");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAtomAccess().getBodyTerminalParserRuleCall_0_1());
				}
				lv_body_0_2=ruleTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_2,
						"net.unicoen.UniMapperGenerator.Terminal");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAtomAccess().getBodyRuleRefParserRuleCall_0_2());
				}
				lv_body_0_3=ruleRuleRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_3,
						"net.unicoen.UniMapperGenerator.RuleRef");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAtomAccess().getBodyNotSetParserRuleCall_0_3());
				}
				lv_body_0_4=ruleNotSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_4,
						"net.unicoen.UniMapperGenerator.NotSet");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAtomAccess().getBodyWildcardParserRuleCall_0_4());
				}
				lv_body_0_5=ruleWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_5,
						"net.unicoen.UniMapperGenerator.Wildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleRef
entryRuleRuleRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRefRule()); }
	iv_ruleRuleRef=ruleRuleRef
	{ $current=$iv_ruleRuleRef.current; }
	EOF;

// Rule RuleRef
ruleRuleRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRefRule());
					}
				}
				otherlv_0=RULE_RULE_REF
				{
					newLeafNode(otherlv_0, grammarAccess.getRuleRefAccess().getReferenceParserRuleCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleRefAccess().getOptionsElementOptionsParserRuleCall_1_0());
				}
				lv_options_1_0=ruleElementOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRefRule());
					}
					set(
						$current,
						"options",
						lv_options_1_0,
						"net.unicoen.UniMapperGenerator.ElementOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElementOptions
entryRuleElementOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementOptionsRule()); }
	iv_ruleElementOptions=ruleElementOptions
	{ $current=$iv_ruleElementOptions.current; }
	EOF;

// Rule ElementOptions
ruleElementOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElementOptionsAccess().getElementOptionsAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getElementOptionsAccess().getLessThanSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementOptionsAccess().getOptionsElementOptionParserRuleCall_2_0_0());
					}
					lv_options_2_0=ruleElementOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementOptionsRule());
						}
						add(
							$current,
							"options",
							lv_options_2_0,
							"net.unicoen.UniMapperGenerator.ElementOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getElementOptionsAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getElementOptionsAccess().getOptionsElementOptionParserRuleCall_2_1_1_0());
						}
						lv_options_4_0=ruleElementOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementOptionsRule());
							}
							add(
								$current,
								"options",
								lv_options_4_0,
								"net.unicoen.UniMapperGenerator.ElementOption");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getElementOptionsAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_from_0_0=RULE_MYSTRING
				{
					newLeafNode(lv_from_0_0, grammarAccess.getRangeAccess().getFromMYSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"from",
						lv_from_0_0,
						"net.unicoen.UniMapperGenerator.MYSTRING");
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				lv_to_2_0=RULE_MYSTRING
				{
					newLeafNode(lv_to_2_0, grammarAccess.getRangeAccess().getToMYSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_2_0,
						"net.unicoen.UniMapperGenerator.MYSTRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTerminal
entryRuleTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminalRule()); }
	iv_ruleTerminal=ruleTerminal
	{ $current=$iv_ruleTerminal.current; }
	EOF;

// Rule Terminal
ruleTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalRule());
						}
					}
					otherlv_0=RULE_TOKEN_REF
					{
						newLeafNode(otherlv_0, grammarAccess.getTerminalAccess().getReferenceTokenRefCrossReference_0_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalAccess().getOptionsElementOptionsParserRuleCall_0_1_0());
					}
					lv_options_1_0=ruleElementOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalRule());
						}
						set(
							$current,
							"options",
							lv_options_1_0,
							"net.unicoen.UniMapperGenerator.ElementOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_literal_2_0=RULE_MYSTRING
					{
						newLeafNode(lv_literal_2_0, grammarAccess.getTerminalAccess().getLiteralMYSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalRule());
						}
						setWithLastConsumed(
							$current,
							"literal",
							lv_literal_2_0,
							"net.unicoen.UniMapperGenerator.MYSTRING");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalAccess().getOptionsElementOptionsParserRuleCall_1_1_0());
					}
					lv_options_3_0=ruleElementOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalRule());
						}
						set(
							$current,
							"options",
							lv_options_3_0,
							"net.unicoen.UniMapperGenerator.ElementOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				lv_eof_4_0='EOF2'
				{
					newLeafNode(lv_eof_4_0, grammarAccess.getTerminalAccess().getEofEOF2Keyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTerminalRule());
					}
					setWithLastConsumed($current, "eof", lv_eof_4_0, "EOF2");
				}
			)
		)
	)
;

// Entry rule entryRuleNotSet
entryRuleNotSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotSetRule()); }
	iv_ruleNotSet=ruleNotSet
	{ $current=$iv_ruleNotSet.current; }
	EOF;

// Rule NotSet
ruleNotSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='~'
			{
				newLeafNode(otherlv_0, grammarAccess.getNotSetAccess().getTildeKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotSetAccess().getBodySetElementParserRuleCall_0_1_0());
					}
					lv_body_1_0=ruleSetElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotSetRule());
						}
						set(
							$current,
							"body",
							lv_body_1_0,
							"net.unicoen.UniMapperGenerator.SetElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='~'
			{
				newLeafNode(otherlv_2, grammarAccess.getNotSetAccess().getTildeKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotSetAccess().getBodyBlockSetParserRuleCall_1_1_0());
					}
					lv_body_3_0=ruleBlockSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotSetRule());
						}
						set(
							$current,
							"body",
							lv_body_3_0,
							"net.unicoen.UniMapperGenerator.BlockSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBlockSet
entryRuleBlockSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockSetRule()); }
	iv_ruleBlockSet=ruleBlockSet
	{ $current=$iv_ruleBlockSet.current; }
	EOF;

// Rule BlockSet
ruleBlockSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockSetAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockSetAccess().getElementsSetElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleSetElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockSetRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"net.unicoen.UniMapperGenerator.SetElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getBlockSetAccess().getVerticalLineKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockSetAccess().getElementsSetElementParserRuleCall_2_1_0());
					}
					lv_elements_3_0=ruleSetElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockSetRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"net.unicoen.UniMapperGenerator.SetElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getBlockSetAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSetElement
entryRuleSetElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetElementRule()); }
	iv_ruleSetElement=ruleSetElement
	{ $current=$iv_ruleSetElement.current; }
	EOF;

// Rule SetElement
ruleSetElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tokenRef_0_0=RULE_TOKEN_REF
				{
					newLeafNode(lv_tokenRef_0_0, grammarAccess.getSetElementAccess().getTokenRefTOKEN_REFTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetElementRule());
					}
					setWithLastConsumed(
						$current,
						"tokenRef",
						lv_tokenRef_0_0,
						"net.unicoen.UniMapperGenerator.TOKEN_REF");
				}
			)
		)
		    |
		(
			(
				lv_stringLiteral_1_0=RULE_MYSTRING
				{
					newLeafNode(lv_stringLiteral_1_0, grammarAccess.getSetElementAccess().getStringLiteralMYSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetElementRule());
					}
					setWithLastConsumed(
						$current,
						"stringLiteral",
						lv_stringLiteral_1_0,
						"net.unicoen.UniMapperGenerator.MYSTRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSetElementAccess().getRangeRangeParserRuleCall_2_0());
				}
				lv_range_2_0=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetElementRule());
					}
					set(
						$current,
						"range",
						lv_range_2_0,
						"net.unicoen.UniMapperGenerator.Range");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_charSet_3_0=RULE_ARG_OR_CHARSET
				{
					newLeafNode(lv_charSet_3_0, grammarAccess.getSetElementAccess().getCharSetARG_OR_CHARSETTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetElementRule());
					}
					setWithLastConsumed(
						$current,
						"charSet",
						lv_charSet_3_0,
						"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
				}
			)
		)
	)
;

// Entry rule entryRuleWildcard
entryRuleWildcard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWildcardRule()); }
	iv_ruleWildcard=ruleWildcard
	{ $current=$iv_ruleWildcard.current; }
	EOF;

// Rule Wildcard
ruleWildcard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dot_0_0='.'
				{
					newLeafNode(lv_dot_0_0, grammarAccess.getWildcardAccess().getDotFullStopKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWildcardRule());
					}
					setWithLastConsumed($current, "dot", lv_dot_0_0, ".");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWildcardAccess().getOptionsElementOptionsParserRuleCall_1_0());
				}
				lv_options_1_0=ruleElementOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWildcardRule());
					}
					set(
						$current,
						"options",
						lv_options_1_0,
						"net.unicoen.UniMapperGenerator.ElementOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElementOption
entryRuleElementOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementOptionRule()); }
	iv_ruleElementOption=ruleElementOption
	{ $current=$iv_ruleElementOption.current; }
	EOF;

// Rule ElementOption
ruleElementOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementOptionAccess().getQualifiedIdQualifiedIdParserRuleCall_0_0());
				}
				lv_qualifiedId_0_0=ruleQualifiedId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementOptionRule());
					}
					set(
						$current,
						"qualifiedId",
						lv_qualifiedId_0_0,
						"net.unicoen.UniMapperGenerator.QualifiedId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementOptionAccess().getIdIdParserRuleCall_1_0_0());
					}
					lv_id_1_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementOptionRule());
						}
						set(
							$current,
							"id",
							lv_id_1_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_assign_2_0='='
					{
						newLeafNode(lv_assign_2_0, grammarAccess.getElementOptionAccess().getAssignEqualsSignKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getElementOptionRule());
						}
						setWithLastConsumed($current, "assign", lv_assign_2_0, "=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementOptionAccess().getValueOptionValueParserRuleCall_1_2_0());
					}
					lv_value_3_0=ruleOptionValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementOptionRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"net.unicoen.UniMapperGenerator.OptionValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnicoenTypeDec
entryRuleUnicoenTypeDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnicoenTypeDecRule()); }
	iv_ruleUnicoenTypeDec=ruleUnicoenTypeDec
	{ $current=$iv_ruleUnicoenTypeDec.current; }
	EOF;

// Rule UnicoenTypeDec
ruleUnicoenTypeDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='=>'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnicoenTypeDecAccess().getEqualsSignGreaterThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnicoenTypeDecAccess().getTypeUnicoenTypeIdentifiersParserRuleCall_1_0());
				}
				lv_type_1_0=ruleUnicoenTypeIdentifiers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnicoenTypeDecRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"net.unicoen.UniMapperGenerator.UnicoenTypeIdentifiers");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnicoenTypeIdentifiers
entryRuleUnicoenTypeIdentifiers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnicoenTypeIdentifiersRule()); }
	iv_ruleUnicoenTypeIdentifiers=ruleUnicoenTypeIdentifiers
	{ $current=$iv_ruleUnicoenTypeIdentifiers.current; }
	EOF;

// Rule UnicoenTypeIdentifiers
ruleUnicoenTypeIdentifiers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnicoenTypeIdentifiersAccess().getNameIdParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnicoenTypeIdentifiersRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='<'
				{
					newLeafNode(otherlv_1, grammarAccess.getUnicoenTypeIdentifiersAccess().getLessThanSignKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnicoenTypeIdentifiersAccess().getTypevalueIdParserRuleCall_0_1_1_0());
						}
						lv_typevalue_2_0=ruleId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnicoenTypeIdentifiersRule());
							}
							set(
								$current,
								"typevalue",
								lv_typevalue_2_0,
								"net.unicoen.UniMapperGenerator.Id");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='>'
				{
					newLeafNode(otherlv_3, grammarAccess.getUnicoenTypeIdentifiersAccess().getGreaterThanSignKeyword_0_1_2());
				}
			)?
		)
		    |
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getUnicoenTypeIdentifiersAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						lv_dir_5_1='<'
						{
							newLeafNode(lv_dir_5_1, grammarAccess.getUnicoenTypeIdentifiersAccess().getDirLessThanSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnicoenTypeIdentifiersRule());
							}
							setWithLastConsumed($current, "dir", lv_dir_5_1, null);
						}
						    |
						lv_dir_5_2='>'
						{
							newLeafNode(lv_dir_5_2, grammarAccess.getUnicoenTypeIdentifiersAccess().getDirGreaterThanSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnicoenTypeIdentifiersRule());
							}
							setWithLastConsumed($current, "dir", lv_dir_5_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnicoenTypeIdentifiersAccess().getFieldvalueQualifiedIdParserRuleCall_1_2_0());
					}
					lv_fieldvalue_6_0=ruleQualifiedId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnicoenTypeIdentifiersRule());
						}
						add(
							$current,
							"fieldvalue",
							lv_fieldvalue_6_0,
							"net.unicoen.UniMapperGenerator.QualifiedId");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getUnicoenTypeIdentifiersAccess().getCommaKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnicoenTypeIdentifiersAccess().getFieldvalueQualifiedIdParserRuleCall_1_3_1_0());
						}
						lv_fieldvalue_8_0=ruleQualifiedId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnicoenTypeIdentifiersRule());
							}
							add(
								$current,
								"fieldvalue",
								lv_fieldvalue_8_0,
								"net.unicoen.UniMapperGenerator.QualifiedId");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getUnicoenTypeIdentifiersAccess().getRightParenthesisKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleLexerRule
entryRuleLexerRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerRuleRule()); }
	iv_ruleLexerRule=ruleLexerRule
	{ $current=$iv_ruleLexerRule.current; }
	EOF;

// Rule LexerRule
ruleLexerRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_fragment_0_0='fragment'
				{
					newLeafNode(lv_fragment_0_0, grammarAccess.getLexerRuleAccess().getFragmentFragmentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLexerRuleRule());
					}
					setWithLastConsumed($current, "fragment", true, "fragment");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_TOKEN_REF
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLexerRuleAccess().getNameTOKEN_REFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLexerRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.unicoen.UniMapperGenerator.TOKEN_REF");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerRuleAccess().getTypeUnicoenTypeDecParserRuleCall_2_0());
				}
				lv_type_2_0=ruleUnicoenTypeDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerRuleRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"net.unicoen.UniMapperGenerator.UnicoenTypeDec");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_COLON_3=RULE_COLON
		{
			newLeafNode(this_COLON_3, grammarAccess.getLexerRuleAccess().getCOLONTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerRuleAccess().getBodyLexerAltListParserRuleCall_4_0());
				}
				lv_body_4_0=ruleLexerAltList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"net.unicoen.UniMapperGenerator.LexerAltList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_SEMICOLON_5=RULE_SEMICOLON
		{
			newLeafNode(this_SEMICOLON_5, grammarAccess.getLexerRuleAccess().getSEMICOLONTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleLexerAltList
entryRuleLexerAltList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerAltListRule()); }
	iv_ruleLexerAltList=ruleLexerAltList
	{ $current=$iv_ruleLexerAltList.current; }
	EOF;

// Rule LexerAltList
ruleLexerAltList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerAltListAccess().getAlternativesLexerAltParserRuleCall_0_0());
				}
				lv_alternatives_0_0=ruleLexerAlt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAltListRule());
					}
					add(
						$current,
						"alternatives",
						lv_alternatives_0_0,
						"net.unicoen.UniMapperGenerator.LexerAlt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getLexerAltListAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerAltListAccess().getAlternativesLexerAltParserRuleCall_1_1_0());
					}
					lv_alternatives_2_0=ruleLexerAlt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerAltListRule());
						}
						add(
							$current,
							"alternatives",
							lv_alternatives_2_0,
							"net.unicoen.UniMapperGenerator.LexerAlt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLexerAlt
entryRuleLexerAlt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerAltRule()); }
	iv_ruleLexerAlt=ruleLexerAlt
	{ $current=$iv_ruleLexerAlt.current; }
	EOF;

// Rule LexerAlt
ruleLexerAlt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerAltAccess().getBodyLexerElementsParserRuleCall_0_0());
				}
				lv_body_0_0=ruleLexerElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAltRule());
					}
					set(
						$current,
						"body",
						lv_body_0_0,
						"net.unicoen.UniMapperGenerator.LexerElements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerAltAccess().getCommandsLexerCommandsParserRuleCall_1_0());
				}
				lv_commands_1_0=ruleLexerCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAltRule());
					}
					set(
						$current,
						"commands",
						lv_commands_1_0,
						"net.unicoen.UniMapperGenerator.LexerCommands");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLexerElements
entryRuleLexerElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerElementsRule()); }
	iv_ruleLexerElements=ruleLexerElements
	{ $current=$iv_ruleLexerElements.current; }
	EOF;

// Rule LexerElements
ruleLexerElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLexerElementsAccess().getLexerElementsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerElementsAccess().getElementsLexerElementWithDollarParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleLexerElementWithDollar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerElementsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"net.unicoen.UniMapperGenerator.LexerElementWithDollar");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleLexerElementWithDollar
entryRuleLexerElementWithDollar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerElementWithDollarRule()); }
	iv_ruleLexerElementWithDollar=ruleLexerElementWithDollar
	{ $current=$iv_ruleLexerElementWithDollar.current; }
	EOF;

// Rule LexerElementWithDollar
ruleLexerElementWithDollar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerElementWithDollarAccess().getBodyLexerElementParserRuleCall_0_0());
				}
				lv_body_0_0=ruleLexerElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerElementWithDollarRule());
					}
					set(
						$current,
						"body",
						lv_body_0_0,
						"net.unicoen.UniMapperGenerator.LexerElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_DOLLAR_1=RULE_DOLLAR
			{
				newLeafNode(this_DOLLAR_1, grammarAccess.getLexerElementWithDollarAccess().getDOLLARTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementWithDollarAccess().getOpIdParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementWithDollarRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLexerElement
entryRuleLexerElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerElementRule()); }
	iv_ruleLexerElement=ruleLexerElement
	{ $current=$iv_ruleLexerElement.current; }
	EOF;

// Rule LexerElement
ruleLexerElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getBodyLabeledLexerElementParserRuleCall_0_0_0());
					}
					lv_body_0_0=ruleLabeledLexerElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"body",
							lv_body_0_0,
							"net.unicoen.UniMapperGenerator.LabeledLexerElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getOperatorEbnfSuffixParserRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleEbnfSuffix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"net.unicoen.UniMapperGenerator.EbnfSuffix");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getBodyLexerAtomParserRuleCall_1_0_0());
					}
					lv_body_2_0=ruleLexerAtom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"net.unicoen.UniMapperGenerator.LexerAtom");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getOperatorEbnfSuffixParserRuleCall_1_1_0());
					}
					lv_operator_3_0=ruleEbnfSuffix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"operator",
							lv_operator_3_0,
							"net.unicoen.UniMapperGenerator.EbnfSuffix");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getBodyLexerBlockParserRuleCall_2_0_0());
					}
					lv_body_4_0=ruleLexerBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"body",
							lv_body_4_0,
							"net.unicoen.UniMapperGenerator.LexerBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerElementAccess().getOperatorEbnfSuffixParserRuleCall_2_1_0());
					}
					lv_operator_5_0=ruleEbnfSuffix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerElementRule());
						}
						set(
							$current,
							"operator",
							lv_operator_5_0,
							"net.unicoen.UniMapperGenerator.EbnfSuffix");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerElementAccess().getBodyActionElementParserRuleCall_3_0());
				}
				lv_body_6_0=ruleActionElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerElementRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"net.unicoen.UniMapperGenerator.ActionElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLabeledLexerElement
entryRuleLabeledLexerElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledLexerElementRule()); }
	iv_ruleLabeledLexerElement=ruleLabeledLexerElement
	{ $current=$iv_ruleLabeledLexerElement.current; }
	EOF;

// Rule LabeledLexerElement
ruleLabeledLexerElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledLexerElementAccess().getLabelIdParserRuleCall_0_0());
				}
				lv_label_0_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledLexerElementRule());
					}
					set(
						$current,
						"label",
						lv_label_0_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_1='='
					{
						newLeafNode(lv_op_1_1, grammarAccess.getLabeledLexerElementAccess().getOpEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLabeledLexerElementRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='+='
					{
						newLeafNode(lv_op_1_2, grammarAccess.getLabeledLexerElementAccess().getOpPlusSignEqualsSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLabeledLexerElementRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLabeledLexerElementAccess().getBodyLexerAtomParserRuleCall_2_0_0());
					}
					lv_body_2_0=ruleLexerAtom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabeledLexerElementRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"net.unicoen.UniMapperGenerator.LexerAtom");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLabeledLexerElementAccess().getBodyLexerBlockParserRuleCall_2_1_0());
					}
					lv_body_3_0=ruleLexerBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabeledLexerElementRule());
						}
						set(
							$current,
							"body",
							lv_body_3_0,
							"net.unicoen.UniMapperGenerator.LexerBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLexerAtom
entryRuleLexerAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerAtomRule()); }
	iv_ruleLexerAtom=ruleLexerAtom
	{ $current=$iv_ruleLexerAtom.current; }
	EOF;

// Rule LexerAtom
ruleLexerAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyRangeParserRuleCall_0_0());
				}
				lv_body_0_1=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_1,
						"net.unicoen.UniMapperGenerator.Range");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyTerminalParserRuleCall_0_1());
				}
				lv_body_0_2=ruleTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_2,
						"net.unicoen.UniMapperGenerator.Terminal");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyRuleRefParserRuleCall_0_2());
				}
				lv_body_0_3=ruleRuleRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_3,
						"net.unicoen.UniMapperGenerator.RuleRef");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyNotSetParserRuleCall_0_3());
				}
				lv_body_0_4=ruleNotSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_4,
						"net.unicoen.UniMapperGenerator.NotSet");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyWildcardParserRuleCall_0_4());
				}
				lv_body_0_5=ruleWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_5,
						"net.unicoen.UniMapperGenerator.Wildcard");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getLexerAtomAccess().getBodyLexerCharSetParserRuleCall_0_5());
				}
				lv_body_0_6=ruleLexerCharSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerAtomRule());
					}
					set(
						$current,
						"body",
						lv_body_0_6,
						"net.unicoen.UniMapperGenerator.LexerCharSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLexerCharSet
entryRuleLexerCharSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerCharSetRule()); }
	iv_ruleLexerCharSet=ruleLexerCharSet
	{ $current=$iv_ruleLexerCharSet.current; }
	EOF;

// Rule LexerCharSet
ruleLexerCharSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_body_0_0=RULE_ARG_OR_CHARSET
			{
				newLeafNode(lv_body_0_0, grammarAccess.getLexerCharSetAccess().getBodyARG_OR_CHARSETTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLexerCharSetRule());
				}
				setWithLastConsumed(
					$current,
					"body",
					lv_body_0_0,
					"net.unicoen.UniMapperGenerator.ARG_OR_CHARSET");
			}
		)
	)
;

// Entry rule entryRuleLexerBlock
entryRuleLexerBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerBlockRule()); }
	iv_ruleLexerBlock=ruleLexerBlock
	{ $current=$iv_ruleLexerBlock.current; }
	EOF;

// Rule LexerBlock
ruleLexerBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLexerBlockAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerBlockAccess().getOptionsOptionsParserRuleCall_1_0_0());
					}
					lv_options_1_0=ruleOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerBlockRule());
						}
						set(
							$current,
							"options",
							lv_options_1_0,
							"net.unicoen.UniMapperGenerator.Options");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_COLON_2=RULE_COLON
			{
				newLeafNode(this_COLON_2, grammarAccess.getLexerBlockAccess().getCOLONTerminalRuleCall_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerBlockAccess().getBodyLexerAltListParserRuleCall_2_0());
				}
				lv_body_3_0=ruleLexerAltList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerBlockRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"net.unicoen.UniMapperGenerator.LexerAltList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLexerBlockAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleLexerCommands
entryRuleLexerCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerCommandsRule()); }
	iv_ruleLexerCommands=ruleLexerCommands
	{ $current=$iv_ruleLexerCommands.current; }
	EOF;

// Rule LexerCommands
ruleLexerCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_RARROW
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getLexerCommandsAccess().getKeywordRARROWTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLexerCommandsRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"net.unicoen.UniMapperGenerator.RARROW");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerCommandsAccess().getCommandsLexerCommandParserRuleCall_1_0());
				}
				lv_commands_1_0=ruleLexerCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerCommandsRule());
					}
					add(
						$current,
						"commands",
						lv_commands_1_0,
						"net.unicoen.UniMapperGenerator.LexerCommand");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getLexerCommandsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerCommandsAccess().getCommandsLexerCommandParserRuleCall_2_1_0());
					}
					lv_commands_3_0=ruleLexerCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerCommandsRule());
						}
						add(
							$current,
							"commands",
							lv_commands_3_0,
							"net.unicoen.UniMapperGenerator.LexerCommand");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLexerCommand
entryRuleLexerCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerCommandRule()); }
	iv_ruleLexerCommand=ruleLexerCommand
	{ $current=$iv_ruleLexerCommand.current; }
	EOF;

// Rule LexerCommand
ruleLexerCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerCommandAccess().getNameLexerCommandNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleLexerCommandName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerCommandRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"net.unicoen.UniMapperGenerator.LexerCommandName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getLexerCommandAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLexerCommandAccess().getArgsLexerCommandExprParserRuleCall_0_2_0());
					}
					lv_args_2_0=ruleLexerCommandExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLexerCommandRule());
						}
						set(
							$current,
							"args",
							lv_args_2_0,
							"net.unicoen.UniMapperGenerator.LexerCommandExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getLexerCommandAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLexerCommandAccess().getNameLexerCommandNameParserRuleCall_1_0());
				}
				lv_name_4_0=ruleLexerCommandName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexerCommandRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"net.unicoen.UniMapperGenerator.LexerCommandName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLexerCommandName
entryRuleLexerCommandName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLexerCommandNameRule()); }
	iv_ruleLexerCommandName=ruleLexerCommandName
	{ $current=$iv_ruleLexerCommandName.current.getText(); }
	EOF;

// Rule LexerCommandName
ruleLexerCommandName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='mode'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLexerCommandNameAccess().getModeKeyword_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getLexerCommandNameAccess().getIdParserRuleCall_1());
		}
		this_Id_1=ruleId
		{
			$current.merge(this_Id_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLexerCommandExpr
entryRuleLexerCommandExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexerCommandExprRule()); }
	iv_ruleLexerCommandExpr=ruleLexerCommandExpr
	{ $current=$iv_ruleLexerCommandExpr.current; }
	EOF;

// Rule LexerCommandExpr
ruleLexerCommandExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLexerCommandExprRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLexerCommandExprAccess().getRefLexerCommandArgCrossReference_0_0());
				}
				ruleId
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getLexerCommandExprAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLexerCommandExprRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"net.unicoen.UniMapperGenerator.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedId
entryRuleQualifiedId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedIdRule()); }
	iv_ruleQualifiedId=ruleQualifiedId
	{ $current=$iv_ruleQualifiedId.current; }
	EOF;

// Rule QualifiedId
ruleQualifiedId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQualifiedIdAccess().getNameIdParserRuleCall_0_0());
				}
				lv_name_0_0=ruleId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualifiedIdRule());
					}
					add(
						$current,
						"name",
						lv_name_0_0,
						"net.unicoen.UniMapperGenerator.Id");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getQualifiedIdAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQualifiedIdAccess().getNameIdParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualifiedIdRule());
						}
						add(
							$current,
							"name",
							lv_name_2_0,
							"net.unicoen.UniMapperGenerator.Id");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleId
entryRuleId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdRule()); }
	iv_ruleId=ruleId
	{ $current=$iv_ruleId.current.getText(); }
	EOF;

// Rule Id
ruleId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TOKEN_REF_0=RULE_TOKEN_REF
		{
			$current.merge(this_TOKEN_REF_0);
		}
		{
			newLeafNode(this_TOKEN_REF_0, grammarAccess.getIdAccess().getTOKEN_REFTerminalRuleCall_0());
		}
		    |
		this_RULE_REF_1=RULE_RULE_REF
		{
			$current.merge(this_RULE_REF_1);
		}
		{
			newLeafNode(this_RULE_REF_1, grammarAccess.getIdAccess().getRULE_REFTerminalRuleCall_1());
		}
	)
;

// Rule GrammarType
ruleGrammarType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='default_hack_'
			{
				$current = grammarAccess.getGrammarTypeAccess().getDEFAULTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGrammarTypeAccess().getDEFAULTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='lexer'
			{
				$current = grammarAccess.getGrammarTypeAccess().getLEXEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGrammarTypeAccess().getLEXEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='parser'
			{
				$current = grammarAccess.getGrammarTypeAccess().getPARSEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGrammarTypeAccess().getPARSEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='tree'
			{
				$current = grammarAccess.getGrammarTypeAccess().getTREEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getGrammarTypeAccess().getTREEEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_TOKEN_VOCAB : 'tokenVocab';

RULE_COLON : ':';

RULE_RARROW : '->';

RULE_OPTIONS_SPEC : 'options' RULE_WSNLCHARS* '{';

RULE_TOKENS_SPEC : 'tokens' RULE_WSNLCHARS* '{';

RULE_RULE_REF : 'a'..'z' RULE_NAME_CHAR*;

RULE_TOKEN_REF : 'A'..'Z' RULE_NAME_CHAR*;

fragment RULE_NAME_CHAR : (RULE_NAME_START_CHAR|'0'..'9'|'_'|'\u00B7'|'\u0300'..'\u036F'|'\u203F'..'\u2040');

fragment RULE_NAME_START_CHAR : ('A'..'Z'|'a'..'z'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00F6'|'\u00F8'..'\u02FF'|'\u0370'..'\u037D'|'\u037F'..'\u1FFF'|'\u200C'..'\u200D'|'\u2070'..'\u218F'|'\u2C00'..'\u2FEF'|'\u3001'..'\uD7FF'|'\uF900'..'\uFDCF'|'\uFDF0'..'\uFFFD');

RULE_INT : ('0'..'9')+;

RULE_MYSTRING : '\'' RULE_LITERAL_CHAR* '\'';

fragment RULE_LITERAL_CHAR : (RULE_ESC|~(('\''|'\\')));

fragment RULE_ESC : '\\' ('n'|'r'|'t'|'b'|'f'|'"'|'\''|'\\'|'>'|'u' RULE_XDIGIT RULE_XDIGIT RULE_XDIGIT RULE_XDIGIT|.);

fragment RULE_XDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_ACTION : RULE_NESTED_ACTION;

fragment RULE_NESTED_ACTION : '___nested_action_';

fragment RULE_ACTION_STRING_LITERAL : '"' (RULE_ACTION_ESC|~(('\\'|'"')))* '"';

fragment RULE_ACTION_CHAR_LITERAL : '\'' (RULE_ACTION_ESC|~(('\\'|'\'')))* '\'';

fragment RULE_ACTION_ESC : '\\' .;

RULE_DOLLAR : '$';

RULE_SEMICOLON : ';';

RULE_ARG_OR_CHARSET : (RULE_ARG_ACTION|RULE_LEXER_CHAR_SET);

fragment RULE_LEXER_CHAR_SET : '___lexer_char_set_';

fragment RULE_ARG_ACTION : '[' ~(('['|']'))* ']';

RULE_SL_COMMENT : '//' ~(('\r'|'\n'))* '\r'? '\n';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\f'|'\r'? '\n')+;

fragment RULE_WSNLCHARS : (' '|'\t'|'\f'|'\n'|'\r');
